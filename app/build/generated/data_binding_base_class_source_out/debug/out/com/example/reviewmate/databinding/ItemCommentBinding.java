// Generated by view binder compiler. Do not edit!
package com.example.reviewmate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.reviewmate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCommentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView itemCommentDateView;

  @NonNull
  public final TextView itemCommentView;

  @NonNull
  public final TextView itemEmailView;

  @NonNull
  public final ImageView itemImg;

  private ItemCommentBinding(@NonNull LinearLayout rootView, @NonNull TextView itemCommentDateView,
      @NonNull TextView itemCommentView, @NonNull TextView itemEmailView,
      @NonNull ImageView itemImg) {
    this.rootView = rootView;
    this.itemCommentDateView = itemCommentDateView;
    this.itemCommentView = itemCommentView;
    this.itemEmailView = itemEmailView;
    this.itemImg = itemImg;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.itemCommentDateView;
      TextView itemCommentDateView = ViewBindings.findChildViewById(rootView, id);
      if (itemCommentDateView == null) {
        break missingId;
      }

      id = R.id.itemCommentView;
      TextView itemCommentView = ViewBindings.findChildViewById(rootView, id);
      if (itemCommentView == null) {
        break missingId;
      }

      id = R.id.itemEmailView;
      TextView itemEmailView = ViewBindings.findChildViewById(rootView, id);
      if (itemEmailView == null) {
        break missingId;
      }

      id = R.id.item_img;
      ImageView itemImg = ViewBindings.findChildViewById(rootView, id);
      if (itemImg == null) {
        break missingId;
      }

      return new ItemCommentBinding((LinearLayout) rootView, itemCommentDateView, itemCommentView,
          itemEmailView, itemImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
